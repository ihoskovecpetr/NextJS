{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Desktop/code/with-apollo-auth/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport cookie from \"cookie\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { withApollo } from \"../lib/apollo\";\nimport redirect from \"../lib/redirect\";\nimport checkLoggedIn from \"../lib/checkLoggedIn\";\n\nconst IndexPage = ({\n  loggedInUser\n}) => {\n  const apolloClient = useApolloClient();\n\n  const signout = () => {\n    document.cookie = cookie.serialize(\"token\", \"\", {\n      maxAge: -1 // Expire the cookie immediately\n\n    }); // Force a reload of all the current queries now that the user is\n    // logged in, so we don't accidentally leave any state around.\n\n    apolloClient.cache.reset().then(() => {\n      // Redirect to a more useful page when signed out\n      redirect({}, \"/signin\");\n    });\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Hello \", loggedInUser.user.name, \"!\", __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: signout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Sign out\"));\n};\n\nIndexPage.getInitialProps = async context => {\n  console.log(\"Index getInitialProps: \");\n  const {\n    loggedInUser\n  } = await checkLoggedIn(context.apolloClient);\n\n  if (!loggedInUser.user) {\n    // If not signed in, send them somewhere more useful\n    redirect(context, \"/signin\");\n  }\n\n  return {\n    loggedInUser,\n    X: \"nic\"\n  };\n};\n\nexport default withApollo(IndexPage);","map":{"version":3,"sources":["/Users/macuser/Desktop/code/with-apollo-auth/pages/index.js"],"names":["React","cookie","useApolloClient","withApollo","redirect","checkLoggedIn","IndexPage","loggedInUser","apolloClient","signout","document","serialize","maxAge","cache","reset","then","user","name","getInitialProps","context","console","log","X"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AACtC,QAAMC,YAAY,GAAGN,eAAe,EAApC;;AAEA,QAAMO,OAAO,GAAG,MAAM;AACpBC,IAAAA,QAAQ,CAACT,MAAT,GAAkBA,MAAM,CAACU,SAAP,CAAiB,OAAjB,EAA0B,EAA1B,EAA8B;AAC9CC,MAAAA,MAAM,EAAE,CAAC,CADqC,CACnC;;AADmC,KAA9B,CAAlB,CADoB,CAKpB;AACA;;AACAJ,IAAAA,YAAY,CAACK,KAAb,CAAmBC,KAAnB,GAA2BC,IAA3B,CAAgC,MAAM;AACpC;AACAX,MAAAA,QAAQ,CAAC,EAAD,EAAK,SAAL,CAAR;AACD,KAHD;AAID,GAXD;;AAaA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACSG,YAAY,CAACS,IAAb,CAAkBC,IAD3B,OACiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjC,EAEE;AAAQ,IAAA,OAAO,EAAER,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAMD,CAtBD;;AAwBAH,SAAS,CAACY,eAAV,GAA4B,MAAMC,OAAN,IAAiB;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,QAAM;AAAEd,IAAAA;AAAF,MAAmB,MAAMF,aAAa,CAACc,OAAO,CAACX,YAAT,CAA5C;;AAEA,MAAI,CAACD,YAAY,CAACS,IAAlB,EAAwB;AACtB;AACAZ,IAAAA,QAAQ,CAACe,OAAD,EAAU,SAAV,CAAR;AACD;;AAED,SAAO;AAAEZ,IAAAA,YAAF;AAAgBe,IAAAA,CAAC,EAAE;AAAnB,GAAP;AACD,CAVD;;AAYA,eAAenB,UAAU,CAACG,SAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport cookie from \"cookie\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\nimport { withApollo } from \"../lib/apollo\";\nimport redirect from \"../lib/redirect\";\nimport checkLoggedIn from \"../lib/checkLoggedIn\";\n\nconst IndexPage = ({ loggedInUser }) => {\n  const apolloClient = useApolloClient();\n\n  const signout = () => {\n    document.cookie = cookie.serialize(\"token\", \"\", {\n      maxAge: -1 // Expire the cookie immediately\n    });\n\n    // Force a reload of all the current queries now that the user is\n    // logged in, so we don't accidentally leave any state around.\n    apolloClient.cache.reset().then(() => {\n      // Redirect to a more useful page when signed out\n      redirect({}, \"/signin\");\n    });\n  };\n\n  return (\n    <div>\n      Hello {loggedInUser.user.name}!<br />\n      <button onClick={signout}>Sign out</button>\n    </div>\n  );\n};\n\nIndexPage.getInitialProps = async context => {\n  console.log(\"Index getInitialProps: \");\n  const { loggedInUser } = await checkLoggedIn(context.apolloClient);\n\n  if (!loggedInUser.user) {\n    // If not signed in, send them somewhere more useful\n    redirect(context, \"/signin\");\n  }\n\n  return { loggedInUser, X: \"nic\" };\n};\n\nexport default withApollo(IndexPage);\n"]},"metadata":{},"sourceType":"module"}